services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: cloudblitz-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: cloudblitz
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - cloudblitz-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/cloudblitz --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API
  backend:
    build:
      context: ./Server
      dockerfile: Dockerfile
    container_name: cloudblitz-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/cloudblitz?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "5000:5000"
    volumes:
      - ./Server/.env:/app/.env:ro
    networks:
      - cloudblitz-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Web App
  frontend:
    build:
      context: ./Client
      dockerfile: Dockerfile
    container_name: cloudblitz-frontend
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: http://localhost:5000/api
      VITE_APP_NAME: CloudBlitz
    ports:
      - "3000:80"
    networks:
      - cloudblitz-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mongodb_data:
    driver: local

networks:
  cloudblitz-network:
    driver: bridge